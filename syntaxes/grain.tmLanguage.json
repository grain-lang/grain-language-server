{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Grain",
	"patterns": [
		{
			"include": "#top-level-statements"
		}
	],
	"repository": {
		"bindings": {
			"patterns": [
				{
					"match": "\\b(let\\b\\s*rec|let)\\b\\s*([a-z]\\w*)\\s*(=)(?=.*=>)",
					"captures": {
						"1": {
							"name": "storage.type.grain"
						},
						"2": {
							"name": "entity.name.function.grain"
						},
						"3": {
							"name": "keyword.operator.grain"
						}
					}
				},
				{
					"match": "\\b(let\\b\\s*rec|let)\\b\\s*([a-z]\\w*)\\s*(=)(?=\\s*pattern\\b)",
					"captures": {
						"1": {
							"name": "storage.type.grain"
						},
						"2": {
							"name": "entity.name.function.grain"
						},
						"3": {
							"name": "keyword.operator.grain"
						}
					}
				},
				{
					"begin": "\\b(let\\b\\s*rec|let)\\b\\s*(?=\\()",
					"end": "(?<=\\))\\s*(=)",
					"beginCaptures": {
						"1": { "name": "storage.type.grain" }
					},
					"endCaptures": {
						"1": { "name": "keyword.operator.grain" }
					},
					"patterns": [
						{ "include": "#binding-destructure" }
					]
				},
				{
					"match": "\\b(let\\b\\s*rec|let)\\s*([a-z]\\w*)\\s*(=)",
					"captures": {
						"1": {
							"name": "storage.type.grain"
						},
						"2": {
							"name": "variable.name.grain"
						},
						"3": {
							"name": "keyword.operator.grain"
						}
					}
				},
				{
					"match": "\\b(let\\b\\s*rec|let)\\s*([a-z]\\w*)\\b",
					"captures": {
						"1": {
							"name": "storage.type.grain"
						},
						"2": {
							"name": "variable.name.grain"
						},
						"3": {
							"name": "keyword.operator.grain"
						}
					}
				}
			]
		},
		"binding-destructure": {
			"patterns": [
				{
					"begin": "\\(",
					"end": "\\)",
					"patterns": [
						{ "include": "#binding-destructure" }
					]
				},
				{ "include": "#identifier" }
			]
		},
		"comments": {
			"patterns": [{
				"begin": "#",
				"end": "$",
				"name": "comment.line.grain"
			}]
		},
		"type-args": {
			"patterns": [{
				"match": "([a-z]\\w*),?",
				"captures": {
					"1": { "name": "variable.parameter.grain" }
				}
			}]
		},
		"data-declarations": {
			"patterns": [
				{
					"match": "\\b(data)\\b\\s+\\b([A-Z]\\w*)\\b\\s*=\\s*\\b([a-z]\\w*)\\b",
					"captures": {
						"1": { "name": "storage.type.grain" },
						"2": { "name": "entity.name.type.grain" },
						"3": { "name": "support.type.grain" }
					}
				},
				{
					"begin": "(data)\\s+([A-Z]\\w*)(?=\\s*(<.*>\\s*)?=\\s*\\b([a-z]\\w*)\\b\\s*\\(.*\\))",
					"end": "(?<=\\))",
					"beginCaptures": {
						"1": { "name": "storage.type.grain" },
						"2": { "name": "entity.name.type.grain" }
					},
					"patterns": [
						{ "include": "#type-vector" },
						{ "include": "#type-constructor" }
					]
				},
				{
					"begin": "(data)\\s+([A-Z]\\w*)",
					"end": "=",
					"beginCaptures": {
						"1": { "name": "storage.type.grain" },
						"2": { "name": "entity.name.type.grain" }
					},
					"patterns": [
						{ "include": "#type-vector" }
					]
				},
				{
					"begin": "(?=\\|\\s*\\b([a-z]\\w*)\\b\\s*\\()",
					"end": "(?<=\\))",
					"patterns": [
						{ "include": "#type-constructor" }
					]
				},
				{
					"match": "\\|\\s*\\b([a-z]\\w*)\\b",
					"captures": {
						"1": {
							"name": "support.type.grain"
						}
					}
				}
			]
		},
		"function": {
			"patterns": [
				{
					"begin": "(\\()(?=.*=>)",
					"end": "(\\))\\s*(=>)",
					"beginCaptures": {
						"1": { "name": "punctuation.definition.parameters.begin.grain" }
					},
					"endCaptures": {
						"1": { "name": "punctuation.definition.parameters.end.grain" },
						"2": { "name": "keyword.operator.grain" }
					},
					"patterns": [
						{ "include": "#binding-destructure" }
					]
				}
			]
		},
		"function-call": {
			"patterns": [
				{
					"begin": "\\b([a-z]\\w*)\\b\\s*(\\()",
					"end": "(\\))",
					"beginCaptures": {
						"1": { "name": "entity.name.function.grain" },
						"2": { "name": "meta.function-call.grain" }
					},
					"endCaptures": {
						"1": { "name": "meta.function-call.grain" }
					},
					"patterns": [
						{
							"match": ",",
							"name": "meta.function-call.grain"
						},
						{ "include": "#expressions" }
					]
				}
			]
		},
		"block": {
			"patterns": [
				{
					"begin": "(\\{)",
					"end": "(\\})",
					"beginCaptures": {
						"1": { "name": "punctuation.definition.parameters.begin.grain" }
					},
					"endCaptures": {
						"1": { "name": "punctuation.definition.parameters.end.grain" }
					},
					"patterns": [
						{ "include": "#expressions" }
					]
				}
			]
		},
		"expressions": {
			"patterns": [
				{ "include": "#comments" },
				{ "include": "#bindings" },
				{ "include": "#function" },
				{ "include": "#tuple" },
				{ "include": "#match" },
				{ "include": "#pattern" },
				{ "include": "#block" },
				{ "include": "#function-call" },
				{ "include": "#expression-keywords" },
				{ "include": "#constant" },
				{ "include": "#identifier" }
			]
		},
		"identifier": {
			"patterns": [
				{
					"match": "\\b[a-z]\\w*\\b",
					"name": "variable.name.grain"
				}
			]
		},
		"constant": {
			"patterns": [
				{ "include": "#number" },
				{ "include": "#strings" },
				{ "include": "#boolean" }
			]
		},
		"boolean": {
			"patterns": [
				{
					"match": "\\b(True|False)\\b",
					"name": "constant.language.grain"
				}
			]
		},
		"number": {
			"patterns": [
				{
					"match": "\\b\\d+\\b",
					"name": "constant.numeric.grain"
				}
			]
		},
		"tuple": {
			"patterns": [
				{
					"begin": "\\(",
					"end": "\\)(?!\\s*=>)",
					"patterns": [
						{ "include": "#expressions" }
					]
				}
			]
		},
		"imports": {},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.grain",
				"match": "\\b(let|rec|match|if|else|while)\\b"
			}]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.grain",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.grain",
							"match": "\\\\."
						}
					]
				},
				{
					"name": "string.quoted.single.grain",
					"begin": "'",
					"end": "'",
					"patterns": [
						{
							"name": "constant.character.escape.grain",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"expression-keywords": {
			"patterns": [
				{
					"match": "\\b(throw|box|unbox|let|rec)\\b",
					"name": "keyword.control.grain"
				}
			]
		},
		"top-level-statements": {
			"patterns": [
				{ "include": "#imports" },
				{ "include": "#data-declarations" },
				{ "include": "#expressions" },
				{ "include": "#comments" }
			]
		},
		"program": {
			"patterns": [
				{ "include": "#top-level-statements" }
			]
		},
		"type-var": {
			"patterns": [
				{
					"match": "([a-z]\\w*)",
					"captures": {
						"1": { "name": "variable.language.grain" }
					}
				},
				{
					"match": "([A-Z]\\w*)",
					"captures": {
						"1": { "name": "entity.name.type.grain" }
					}
				},
				{
					"begin": "([A-Z]\\w*)<",
					"end": ">",
					"captures": {
						"1": { "name": "support.type.grain" }
					},
					"patterns": [
						{ "include": "#type-var" }
					]
				},
				{
					"begin": "\\(",
					"end": "\\)",
					"patterns": [
						{
							"include": "#type-var"
						}
					]
				}
			]
		},
		"type-vector": {
			"patterns": [
				{
					"begin": "<",
					"end": ">",
					"patterns": [
						{ "include": "#type-var" }
					]
				}
			]
		},
		"type-constructor": {
			"patterns": [
				{
					"begin": "\\b([a-z]\\w*)\\b\\s*(\\()",
					"end": "(\\))",
					"beginCaptures": {
						"1": { "name": "support.type.grain" },
						"2": { "name": "support.type.grain" }
					},
					"endCaptures": {
						"1": { "name": "support.type.grain" }
					},
					"patterns": [
						{
							"match": "(,)",
							"captures": {
								"1": { "name": "support.type.grain" }
							}
						},
						{ "include": "#type-var" }
					]
				}
			]
		},
		"type-destructor-tuple": {
			"patterns": [
				{
					"begin": "\\(",
					"end": "\\)",
					"patterns": [
						{ 
							"match": "\\b([a-z]\\w*)\\b",
							"captures": {
								"1": { "name": "variable.name.grain" }
							}
						},
						{ 
							"match": "\\b(_)\\b",
							"captures": {
								"1": { "name": "meta.separator.grain" }
							}
						},
						{ "include": "#type-destructor" }
					]
				}
			]
		},
		"type-destructor": {
			"patterns": [
				{
					"begin": "\\b([a-z]\\w*)\\b(?=\\s*\\()",
					"end": "(?<=\\))",
					"beginCaptures": {
						"1": { "name": "support.type.grain" }
					},
					"patterns": [
						{
							"begin": "(\\()",
							"end": "(\\))",
							"captures": {
								"1": { "name": "support.type.grain" }
							},
							"patterns": [
								{
									"match": "\\b([a-z]\\w*)\\b",
									"captures": {
										"1": { "name": "variable.name.grain" }
									}
								},
								{
									"match": "\\b(_)\\b",
									"captures": {
										"1": { "name": "meta.separator.grain" }
									}
								},
								{
									"match": "(,)",
									"captures": {
										"1": { "name": "support.type.grain" }
									}
								},
								{
									"include": "#type-destructor"
								}
							]
						}
					]
				},
				{
					"match": "\\b([a-z]\\w*)\\b",
					"captures": {
						"1": { "name": "support.type.grain" }
					}
				},
				{ "include": "#type-destructor-tuple" }
			]
		},
		"pattern-variant": {
			"patterns": [
				{
					"begin": "(=>)",
					"end": "(?=\\||\\})",
					"beginCaptures": {
						"1": { "name": "support.type.grain" }
					},
					"patterns": [
						{ "include": "#expressions" }
					]
				},
				{
					"begin": "",
					"end": "(?==>\\|\\})",
					"patterns": [
						{
							"include": "#type-destructor"
						}
					]
				}
			]
		},
		"match": {
			"patterns": [
				{
					"begin": "\\b(match)\\b\\s*(\\().*(\\))\\s*(?=\\{)",
					"end": "(?<=\\})",
					"beginCaptures": {
						"1": { "name": "keyword.operator.grain" },
						"2": { "name": "punctuation.definition.parameters.begin.grain" },
						"3": { "name": "punctuation.definition.parameters.end.grain" }
					},
					"patterns": [
						{
							"begin": "(?<=\\||\\{)",
							"end": "(?=\\||\\})",
							"patterns": [
								{
									"include": "#pattern-variant"
								}
							]
						},
						{
							"match": "\\{",
							"name": "punctuation.definition.parameters.begin.grain"
						},
						{
							"match": "\\}",
							"name": "punctuation.definition.parameters.end.grain"
						}
					]
				},
				{
					"begin": "\\b(match)\\b\\s*\\(",
					"end": "\\)",
					"beginCaptures": {
						"1": {
							"name": "keyword.operator.grain"
						}
					},
					"patterns": [
						{
							"include": "#expression"
						}
					]
				}
			]
		},
		"pattern": {
			"patterns": [
				{
					"begin": "\\b(pattern)\\b\\s*(?=\\{)",
					"end": "(?<=\\})",
					"beginCaptures": {
						"1": { "name": "keyword.operator.grain" }
					},
					"patterns": [
						{
							"begin": "(?<=\\||\\{)",
							"end": "(?=\\||\\})",
							"patterns": [
								{
									"include": "#pattern-variant"
								}
							]
						},
						{
							"match": "\\{",
							"name": "punctuation.definition.parameters.begin.grain"
						},
						{
							"match": "\\}",
							"name": "punctuation.definition.parameters.end.grain"
						}
					]
				}
			]
		}
	},
	"scopeName": "source.grain"
}